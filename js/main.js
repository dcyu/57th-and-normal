// Generated by CoffeeScript 1.6.0
(function() {
  var DOMReady, NS, createLeafletIcons, createVisualization, icons, intervals, layers, map,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  map = null;

  layers = {};

  icons = {};

  intervals = ['2005', '2006', '2007', '2008', '2009', '2010q1', '2010q2', '2010q3', '2010q4', '2011q1', '2011q2', '2011q3', '2011q4', '2012q1', '2012q2', '2012q3', '2012q4', '2013q1', '2013q2', '2013q3', '2013q4'];

  NS = ['NORFOLK SOUTHERN RAILWAY CO', 'NORFOLK & SOUTHERN RAILROAD CORP', 'NORFOLK & SOUTHERN RAILWAY ILLINOIS CONSTRUCTION C', 'NORFOLK SOUTHER RAILWAY CO', 'NORFOLK SOUTHERN CORP', 'NORFOLK SOUTHERN RAILRAY CO', 'NORFOLK SOUTHERN RAILROAD', 'NORFOLK SOUTHERN RAILROAD CORP', 'NORFOLK SOUTHERN RAILWAY', 'NORFOLK SOUTHERN RAILWAY COMPANY', 'NORFOLK SOUTHERN RAILWAY COMPANY', 'NORFOLK SOUTHERN RAILWAY INC', 'NORFOLK SOUTHTERN RAILWAY CO', 'NORTHFOLK SOUTHERN RAILWAY CO'];

  createLeafletIcons = function() {
    icons.blue = L.icon({
      iconUrl: '../js/leaflet/images/NonNSProperties.png',
      iconSize: [12, 12],
      iconAnchor: [6, 6]
    });
    return icons.red = L.icon({
      iconUrl: '../js/leaflet/images/NSProperties.png',
      iconSize: [12, 12],
      iconAnchor: [6, 6]
    });
  };

  createVisualization = function(d1, d2) {
    createLeafletIcons();
    layers.blue = new L.LayerGroup();
    layers.red = new L.LayerGroup();
    layers.blue.addTo(map);
    layers.red.addTo(map);
    return $("input[type='range']").on('change', function(e) {
      var category, data, datum, deed, deeds, grantee, icon, interval, key, lat, layer, lon, obj, pin, s, value, _i, _j, _len, _len1, _results;
      console.log(e);
      interval = intervals[e.target.value];
      $('.interval p').text(interval);
      layers.blue.clearLayers();
      data = d1[interval];
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        obj = data[_i];
        pin = obj.pin;
        grantee = obj['first-grantee'];
        category = __indexOf.call(NS, grantee) >= 0 ? 'red' : 'blue';
        icon = icons[category];
        layer = layers[category];
        datum = d2[pin];
        lat = datum.lat;
        lon = datum.lon;
        deeds = datum.deeds;
        s = "";
        for (_j = 0, _len1 = deeds.length; _j < _len1; _j++) {
          deed = deeds[_j];
          for (key in deed) {
            value = deed[key];
            s += "" + pin + ", " + key + ", " + value;
          }
          s += "<br>";
        }
        _results.push(L.marker([lat, lon], {
          icon: icon
        }).addTo(layer).bindPopup(s));
      }
      return _results;
    });
  };

  DOMReady = function() {
    var dfd1, dfd2;
    map = L.map('map', {
      minZoom: 15,
      maxZoom: 18
    }).setView([41.787148, -87.637666], 15);
    L.tileLayer('../tiles/{z}/{x}/{y}.png').addTo(map);
    dfd1 = new $.Deferred();
    dfd2 = new $.Deferred();
    $.when(dfd1, dfd2).done(createVisualization);
    $.getJSON('../data/intervals.json').done(function(data) {
      return dfd1.resolve(data);
    });
    $.getJSON('../data/deeds.json').done(function(data) {
      return dfd2.resolve(data);
    });
    return $.getJSON('../data/the-area.geojson').done(function(data) {
      var style;
      style = {
        color: '#000',
        weight: 2,
        opacity: 1.0,
        fillOpacity: 0.2
      };
      return L.geoJson(data, {
        style: style,
        onEachFeature: function(feature, layer) {
          console.log(feature, layer);
          return layer.on('click', function(d) {
            return this.setStyle({
              color: 'red'
            });
          });
        }
      }).addTo(map);
    });
  };

  window.addEventListener('DOMContentLoaded', DOMReady, false);

}).call(this);
